#include<iostream>
	
#define SIZE 10
	
using namespace std;
	
class STACK
{
	private:
	    int num[SIZE];
	    int top;
	public:
	    STACK();
	    int push(int);
	    int pop();
	    int isEmpty();
	    int isFull();
	    void display();
};

STACK::STACK()
{
top=-1;
}
	
int STACK::isEmpty()
{
if(top==-1)
    return 1;
else
    return 0;   
}
	
int STACK::isFull()
{
	if(top==(SIZE-1))
	    return 1;
	else
	    return 0;
}
	
int STACK::push(int n)
{
	if(isFull())
	   	return 0;
	++top;
	num[top]=n;
	return n;
}
	
int STACK::pop()
{
	int temp;
	if(isEmpty())
	   	return 0;
	temp=num[top];
	--top;
	return temp;
}
	
void STACK::display()
{
	int i;
	cout<<"The stack has: ";
	for(i=(top); i>=0; i--)
	    cout<<num[i]<<" ";
	cout<<endl;
}
	
int main()
{
	STACK stack;
	int choice;
	do
	{
	    cout<<"\nEnter : "<<endl;
	    cout<<"0 to Exit."<<endl;
	    cout<<"1 to enter a new element in the stack."<<endl;
	    cout<<"2 to delete an element from the stack."<<endl;
	    cout<<"3 to display items in the stack"<<endl;
	     
	    cout<<"\nEnter your choice: ";
	    cin>>choice;
	
	    switch(choice)
		{
	        case 0: 
				break;
	         
	        case 1:
	            cout<<"\nEnter the element to be inserted: ";
	            int n, temp;
	            cin>>n;
	            temp=stack.push(n);
	            if(temp==0)
	                cout<<"The stack is full!"<<endl;
	            else
	                cout<<temp<<" successfully inserted."<<endl;
	        break;
	             
	        case 2:
	            temp=stack.pop();
	            if(temp==0)
	                cout<<"The stack is empty!"<<endl;
	            else
	                cout<<temp<<" successfully removed."<<endl;
	    		break;
	         
	        case 3:
	            stack.display();
	            break;
	         
	        default:
	            cout<<"Invalid choice."<<endl;
	    }   
	}while(choice!=0);
	
	return 0;	 
}
